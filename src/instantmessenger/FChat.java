/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instantmessenger;

import static instantmessenger.InstantMessenger.database;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;
import java.net.InetSocketAddress;
/**
 *
 * @author FrozenFractal
 */
public class FChat extends javax.swing.JFrame {

    /**
     * Creates new form FChat
     */
    //FFriends friends;
    FTablePrint friends;
    FLogin login;
    public Socket sock = null;
    String frndName;
    String user = InstantMessenger.user;
    msgSend msgS;
    public FChat() {
        initComponents();
        this.getRootPane().setDefaultButton(btnSend);
    }
    
    
    public void getFrames(FTablePrint F, FLogin L, dataBase db){
        this.friends = F;
        this.login = L;
        DefaultCaret caret = (DefaultCaret)msgArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }
    
    public void setSock(Socket s){
        this.sock = s;
        //msgS = new msgSend(sock);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSend = new javax.swing.JButton();
        txtMsg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgArea = new javax.swing.JTextArea();
        btnLeaveChat = new javax.swing.JButton();

        setTitle("SNU Chat");
        setResizable(false);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txtMsg.setBackground(new java.awt.Color(252, 252, 252));

        msgArea.setEditable(false);
        msgArea.setBackground(new java.awt.Color(240, 240, 240));
        msgArea.setColumns(20);
        msgArea.setFont(new java.awt.Font("Levenim MT", 0, 13)); // NOI18N
        msgArea.setRows(5);
        msgArea.setBorder(null);
        msgArea.setFocusable(false);
        msgArea.setMargin(new java.awt.Insets(0, 0, 0, 0));
        msgArea.setOpaque(false);
        jScrollPane1.setViewportView(msgArea);

        btnLeaveChat.setText("Exit App");
        btnLeaveChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveChatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLeaveChat, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(txtMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLeaveChat)
                .addGap(37, 37, 37))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String msg = txtMsg.getText();
        txtMsg.setText("");
        if(!(msg.equals(""))){
            msgS.send(msg);
            msgArea.append(InstantMessenger.user+": "+msg+"\n");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnLeaveChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveChatActionPerformed
       // try {
            msgS.send("qwert345");
//            friends.setVisible(true);
//            this.setVisible(false);
//            sock.close();
//            InstantMessenger.server = null;
//            InstantMessenger.server = new Serv(6789, database);
//            InstantMessenger.server.start();
//            InstantMessenger.remUser = null;
            InstantMessenger.exitApp();
      //  } catch (IOException ex) {
      
        
    }//GEN-LAST:event_btnLeaveChatActionPerformed


    public String getFriend(String IP, String name){
        if(!name.toLowerCase().equals(InstantMessenger.user.toLowerCase())){
            InstantMessenger.remUser = name;
            frndName = name;
            try{
                sock = new Socket();
                sock.connect(new InetSocketAddress(IP,6789), 1300);
                DataInputStream s = new DataInputStream(sock.getInputStream());
                String ans = s.readUTF();
                if("no".equals(ans)){
                    return "no";
                }
                if(msgS == null)
                    msgS = new msgSend(sock);
                msgRecv msgR = new msgRecv(sock,frndName);
                msgR.start();
                InstantMessenger.server.server.close();
                InstantMessenger.server.stop();
                return "yes";
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Unable To Connect! Sorry!");
                if(!InstantMessenger.server.isAlive())
                    InstantMessenger.server.start();
                return "unable";
            }
        }
        
        else{
            JOptionPane.showMessageDialog(this, "Becoming a smartass huh? dont, bitch!");
            return "unable";
        }
    }
    public boolean receiveFriend(){
        try{
            if(msgS == null)
                msgS = new msgSend(sock);
            msgRecv msgR = new msgRecv(sock,frndName);
            msgR.start();
            InstantMessenger.server.server.close();
            return true;
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Unable To Connect! Sorry!");
            InstantMessenger.server.start();
            return false;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLeaveChat;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea msgArea;
    private javax.swing.JTextField txtMsg;
    // End of variables declaration//GEN-END:variables
}
